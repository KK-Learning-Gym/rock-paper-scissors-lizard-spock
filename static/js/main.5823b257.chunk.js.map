{"version":3,"sources":["components/Header.js","reducers/gameReducer.js","components/Options.js","components/Result.js","App.js","index.js"],"names":["Header","score","useSelector","state","initialState","page","choice","player","house","result","setResult","type","data","gameReducer","action","getAngle","index","Number","options","name","beats","Options","dispatch","useDispatch","useEffect","pickedOption","find","option","includes","handleSelect","event","max","playerChoice","target","getAttribute","houseChoice","length","Math","floor","random","setChoice","className","map","key","value","onClick","Result","Container","props","children","App","store","createStore","subscribe","storeNow","getState","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5823b257.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Header = () => {\n\tconst score = useSelector(state => state.score)\n\treturn (\n\t\t<>\n\t\t\t<div>Rock, Paper, Scissors, Lizard, Spock</div>\n\t\t\t<div>Score {score}</div>\n\t\t</>\n\t)\n}\n\nexport default Header\n","const initialState = {\n\tpage: 'home',\n\tscore: 0,\n\tchoice: {\n\t\tplayer: null,\n\t\thouse: null,\n\t},\n\tresult: 'unknown',\n}\n\nconst gameReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'PAGE':\n\t\t\treturn { ...state, page: action.data }\n\t\tcase 'SCORE':\n\t\t\treturn { ...state, score: state.score + 1 }\n\t\tcase 'CHOICE':\n\t\t\treturn { ...state, choice: action.data }\n\t\tcase 'RESULT':\n\t\t\treturn { ...state, result: action.data }\n\t\tcase 'CLEAR':\n\t\t\treturn { ...initialState, score: state.score }\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const setPage = page => {\n\treturn {\n\t\ttype: 'PAGE',\n\t\tdata: page,\n\t}\n}\n\nexport const setScore = () => {\n\treturn {\n\t\ttype: 'SCORE',\n\t}\n}\n\nexport const setChoice = choice => {\n\treturn {\n\t\ttype: 'CHOICE',\n\t\tdata: choice,\n\t}\n}\n\nexport const setResult = result => {\n\treturn {\n\t\ttype: 'RESULT',\n\t\tdata: result,\n\t}\n}\n\nexport const clear = () => {\n\treturn {\n\t\ttype: 'CLEAR',\n\t}\n}\n\nexport default gameReducer\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setPage, setScore, setChoice, setResult } from '../reducers/gameReducer'\n\nconst getRandomInt = max => {\n\treturn Math.floor(Math.random() * Math.floor(max))\n}\n\nconst getAngle = index => {\n\treturn 18 * (1 + 4 * Number(index))\n}\n\nconst options = [\n\t{\n\t\tname: 'Rock',\n\t\tbeats: ['Scissors', 'Lizard'],\n\t},\n\t{\n\t\tname: 'Paper',\n\t\tbeats: ['Rock', 'Spock'],\n\t},\n\t{\n\t\tname: 'Scissors',\n\t\tbeats: ['Paper', 'Lizard'],\n\t},\n\t{\n\t\tname: 'Lizard',\n\t\tbeats: ['Paper', 'Spock'],\n\t},\n\t{\n\t\tname: 'Spock',\n\t\tbeats: ['Rock', 'Scissors'],\n\t},\n]\n\nconst Options = () => {\n\tconst dispatch = useDispatch()\n\tconst choice = useSelector(state => state.choice)\n\n\tconst hook = () => {\n\t\tif (choice.player && choice.house) {\n\t\t\tconst pickedOption = options.find(option => option.name === choice.player)\n\t\t\tif (choice.player === choice.house) {\n\t\t\t\tdispatch(setResult('draw'))\n\t\t\t} else if (pickedOption.beats.includes(choice.house)) {\n\t\t\t\tdispatch(setResult('win'))\n\t\t\t\tdispatch(setScore())\n\t\t\t} else {\n\t\t\t\tdispatch(setResult('lose'))\n\t\t\t}\n\t\t\tdispatch(setPage('result'))\n\t\t}\n\t}\n\n\tuseEffect(hook, [choice, dispatch])\n\n\tconst handleSelect = event => {\n\t\tconst playerChoice = event.target.getAttribute('value')\n\n\t\tconst houseChoice = options[getRandomInt(options.length)]['name']\n\n\t\tconst selectedChoice = {\n\t\t\tplayer: playerChoice,\n\t\t\thouse: houseChoice,\n\t\t}\n\t\tdispatch(setChoice(selectedChoice))\n\t}\n\n\treturn (\n\t\t<div className=\"option-wrapper\">\n\t\t\t{options.map((option, index) => (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`option deg${getAngle(index)}`}\n\t\t\t\t\tkey={option.name}\n\t\t\t\t\tvalue={option.name}\n\t\t\t\t\tonClick={handleSelect}\n\t\t\t\t>\n\t\t\t\t\t{option.name}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Options\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { clear } from '../reducers/gameReducer'\n\nconst Result = () => {\n\tconst dispatch = useDispatch()\n\tconst result = useSelector(state => state.result)\n\tconst choice = useSelector(state => state.choice)\n\n\tif (result !== 'unknown') {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\tYou picked {choice.player}. House picked {choice.house}.\n\t\t\t\t</div>\n\t\t\t\t<div>You {result}</div>\n\t\t\t\t<button onClick={() => dispatch(clear())} type=\"button\">\n\t\t\t\t\tPlay Again\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn <>loading...</>\n}\n\nexport default Result\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './App.css'\nimport Header from './components/Header'\nimport Options from './components/Options'\nimport Result from './components/Result'\n\nconst Container = props => {\n\treturn (\n\t\t<div className=\"page-wrapper\">\n\t\t\t<Header /> {props.children}\n\t\t</div>\n\t)\n}\n\nconst App = () => {\n\tconst page = useSelector(state => state.page)\n\n\tswitch (page) {\n\t\tcase 'home':\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Options />\n\t\t\t\t</Container>\n\t\t\t)\n\t\tcase 'result':\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Result />\n\t\t\t\t</Container>\n\t\t\t)\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Options />\n\t\t\t\t</Container>\n\t\t\t)\n\t}\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport gameReducer from './reducers/gameReducer'\n\nconst store = createStore(gameReducer)\n\nstore.subscribe(() => {\n\tconst storeNow = store.getState()\n\tconsole.log(storeNow)\n})\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}